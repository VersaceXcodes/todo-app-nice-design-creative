openapi: 3.0.0
info:
  title: Creative ToDo App API
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /auth/register:
    post:
      summary: Register a new user
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserInput"
      responses:
        "201":
          description: User registration successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  auth_token:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
  /auth/login:
    post:
      summary: Log in a user
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  auth_token:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
  /auth/recover:
    post:
      summary: Recover password
      operationId: recoverPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        "200":
          description: Password recovery email sent
  /users/{user_id}:
    get:
      summary: Get user profile
      operationId: getUserProfile
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    put:
      summary: Update user profile
      operationId: updateUserProfile
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserInput"
      responses:
        "200":
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /preferences:
    get:
      summary: Get user preferences
      operationId: getUserPreferences
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Preferences retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPreference"
    put:
      summary: Update user preferences
      operationId: updateUserPreferences
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserPreferenceInput"
      responses:
        "200":
          description: Preferences updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPreference"
  /tasks:
    post:
      summary: Create a new task
      operationId: createTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTaskInput"
      responses:
        "201":
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
    get:
      summary: Get list of tasks
      operationId: listTasks
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: string
        - name: query
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
        - name: sort_by
          in: query
          schema:
            type: string
            enum:
              - name
              - due_date
              - created_at
            default: created_at
        - name: sort_order
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
        - name: priority
          in: query
          schema:
            type: string
            enum:
              - low
              - medium
              - high
        - name: is_completed
          in: query
          schema:
            type: boolean
      responses:
        "200":
          description: Tasks retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"
  /tasks/{task_id}:
    get:
      summary: Get task details
      operationId: getTask
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Task retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
    put:
      summary: Update a task
      operationId: updateTask
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTaskInput"
      responses:
        "200":
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
    delete:
      summary: Delete a task
      operationId: deleteTask
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Task deleted successfully
  /categories:
    post:
      summary: Create a new category
      operationId: createCategory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCategoryInput"
      responses:
        "201":
          description: Category created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
    get:
      summary: Get list of categories
      operationId: listCategories
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: string
        - name: query
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
        - name: sort_by
          in: query
          schema:
            type: string
            enum:
              - name
              - created_at
            default: created_at
        - name: sort_order
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
      responses:
        "200":
          description: Categories retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
  /categories/{category_id}:
    get:
      summary: Get category details
      operationId: getCategory
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Category retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
    put:
      summary: Update a category
      operationId: updateCategory
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCategoryInput"
      responses:
        "200":
          description: Category updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
    delete:
      summary: Delete a category
      operationId: deleteCategory
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Category deleted successfully
  /task_reminders:
    post:
      summary: Create a task reminder
      operationId: createTaskReminder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTaskReminderInput"
      responses:
        "201":
          description: Reminder created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskReminder"
    get:
      summary: Get list of task reminders
      operationId: listTaskReminders
      parameters:
        - name: task_id
          in: query
          schema:
            type: string
        - name: reminder_time
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
      responses:
        "200":
          description: Reminders retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TaskReminder"
  /task_reminders/{reminder_id}:
    put:
      summary: Update a task reminder
      operationId: updateTaskReminder
      parameters:
        - name: reminder_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTaskReminderInput"
      responses:
        "200":
          description: Reminder updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskReminder"
    delete:
      summary: Delete a task reminder
      operationId: deleteTaskReminder
      parameters:
        - name: reminder_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Reminder deleted successfully
components:
  schemas:
    User:
      type: object
      properties:
        user_id:
          type: string
        email:
          type: string
        name:
          type: string
        password_hash:
          type: string
        created_at:
          type: string
          format: date-time
    CreateUserInput:
      type: object
      required:
        - email
        - name
        - password_hash
      properties:
        email:
          type: string
        name:
          type: string
        password_hash:
          type: string
    UpdateUserInput:
      type: object
      properties:
        user_id:
          type: string
        email:
          type: string
        name:
          type: string
        password_hash:
          type: string
    UserPreference:
      type: object
      properties:
        user_id:
          type: string
        theme:
          type: string
        default_view:
          type: string
        email_notifications:
          type: boolean
        in_app_notifications:
          type: boolean
    UpdateUserPreferenceInput:
      type: object
      properties:
        user_id:
          type: string
        theme:
          type: string
        default_view:
          type: string
        email_notifications:
          type: boolean
        in_app_notifications:
          type: boolean
    Task:
      type: object
      properties:
        task_id:
          type: string
        user_id:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        due_date:
          type: string
          format: date-time
          nullable: true
        priority:
          type: string
        category_id:
          type: string
          nullable: true
        is_completed:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    CreateTaskInput:
      type: object
      required:
        - user_id
        - name
      properties:
        user_id:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        due_date:
          type: string
          format: date-time
          nullable: true
        priority:
          type: string
        category_id:
          type: string
          nullable: true
        is_completed:
          type: boolean
    UpdateTaskInput:
      type: object
      properties:
        task_id:
          type: string
        user_id:
          type: string
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        due_date:
          type: string
          format: date-time
          nullable: true
        priority:
          type: string
        category_id:
          type: string
          nullable: true
        is_completed:
          type: boolean
    TaskReminder:
      type: object
      properties:
        reminder_id:
          type: string
        task_id:
          type: string
        reminder_time:
          type: string
          format: date-time
    CreateTaskReminderInput:
      type: object
      required:
        - task_id
        - reminder_time
      properties:
        task_id:
          type: string
        reminder_time:
          type: string
          format: date-time
    UpdateTaskReminderInput:
      type: object
      properties:
        reminder_id:
          type: string
        task_id:
          type: string
        reminder_time:
          type: string
          format: date-time
    Category:
      type: object
      properties:
        category_id:
          type: string
        user_id:
          type: string
        name:
          type: string
        color_code:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    CreateCategoryInput:
      type: object
      required:
        - user_id
        - name
        - color_code
      properties:
        user_id:
          type: string
        name:
          type: string
        color_code:
          type: string
    UpdateCategoryInput:
      type: object
      properties:
        category_id:
          type: string
        user_id:
          type: string
        name:
          type: string
        color_code:
          type: string
